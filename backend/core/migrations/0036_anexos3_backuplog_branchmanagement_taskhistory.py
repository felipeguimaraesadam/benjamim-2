# Generated by Django 5.2.3 on 2025-09-10 23:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0035_revert_conflicting_migration'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnexoS3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anexo_id', models.CharField(max_length=100, unique=True)),
                ('nome_original', models.CharField(max_length=255)),
                ('nome_s3', models.CharField(max_length=255)),
                ('bucket_name', models.CharField(max_length=100)),
                ('s3_key', models.CharField(max_length=500)),
                ('s3_url', models.URLField(max_length=1000)),
                ('content_type', models.CharField(max_length=100)),
                ('file_size', models.PositiveBigIntegerField()),
                ('file_hash', models.CharField(max_length=64)),
                ('anexo_type', models.CharField(choices=[('obra', 'Obra'), ('funcionario', 'Funcionário'), ('compra', 'Compra'), ('despesa', 'Despesa'), ('locacao', 'Locação'), ('backup', 'Backup'), ('other', 'Outro')], max_length=20)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_migrated', models.BooleanField(default=False)),
                ('migration_date', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos_s3', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'indexes': [models.Index(fields=['anexo_type', 'object_id'], name='core_anexos_anexo_t_0ed42b_idx'), models.Index(fields=['s3_key'], name='core_anexos_s3_key_b0bad6_idx'), models.Index(fields=['file_hash'], name='core_anexos_file_ha_2fd83d_idx'), models.Index(fields=['is_migrated'], name='core_anexos_is_migr_8b7a48_idx')],
            },
        ),
        migrations.CreateModel(
            name='BackupLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_id', models.CharField(max_length=100, unique=True)),
                ('backup_type', models.CharField(choices=[('full', 'Backup Completo'), ('incremental', 'Backup Incremental'), ('manual', 'Backup Manual')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('in_progress', 'Em Progresso'), ('completed', 'Concluído'), ('failed', 'Falhou')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveBigIntegerField(blank=True, null=True)),
                ('file_hash', models.CharField(blank=True, max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to=settings.AUTH_USER_MODEL)),
                ('original_backup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duplicates', to='core.backuplog')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='core_backup_status_499394_idx'), models.Index(fields=['file_hash'], name='core_backup_file_ha_a938c0_idx'), models.Index(fields=['backup_type', 'status'], name='core_backup_backup__6fd7fd_idx')],
            },
        ),
        migrations.CreateModel(
            name='BranchManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Ativa'), ('merged', 'Merged'), ('deleted', 'Deletada'), ('protected', 'Protegida')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_commit_hash', models.CharField(blank=True, max_length=40)),
                ('last_commit_message', models.TextField(blank=True)),
                ('last_commit_date', models.DateTimeField(blank=True, null=True)),
                ('merged_at', models.DateTimeField(blank=True, null=True)),
                ('is_protected', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_branches', to=settings.AUTH_USER_MODEL)),
                ('merged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='merged_branches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='core_branch_status_751731_idx'), models.Index(fields=['branch_name'], name='core_branch_branch__080f7b_idx')],
            },
        ),
        migrations.CreateModel(
            name='TaskHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=100, unique=True)),
                ('task_type', models.CharField(choices=[('backup', 'Backup'), ('migration', 'Migração'), ('deployment', 'Deploy'), ('maintenance', 'Manutenção'), ('other', 'Outro')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('in_progress', 'Em Progresso'), ('completed', 'Concluída'), ('failed', 'Falhou'), ('cancelled', 'Cancelada')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='core_taskhi_status_0c028b_idx'), models.Index(fields=['task_type', 'status'], name='core_taskhi_task_ty_1f4059_idx')],
            },
        ),
    ]
