services:
  - type: web
    name: django-backend
    env: python
    plan: free
    healthCheckPath: /api/health-check/
    buildCommand: "pip install -r backend/requirements.txt"
    startCommand: "gunicorn sgo_core.wsgi:application"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.4
      - key: DATABASE_URL
        fromDatabase:
          name: sgo-postgres
          property: connectionString
      - key: DJANGO_SETTINGS_MODULE
        value: sgo_core.settings
      - key: FRONTEND_URL
        value: https://benjamim-2.onrender.com
      - key: WEB_CONCURRENCY
        value: 4
      # Chaves secretas serão gerenciadas via 'sync: false'
      - key: SECRET_KEY
        sync: false
      - key: DJANGO_SUPERUSER_PASSWORD
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
    buildFilter:
      paths:
        - backend/**
  - type: psql # Corrigido de 'pserv' para 'psql'
    name: sgo-postgres
    plan: free
    databaseName: sgo_db
    user: sgo_user
    version: "13"
  - type: web
    name: react-frontend
    env: static
    plan: free
    buildCommand: "cd frontend && npm install && npm run build"
    staticPublishPath: ./frontend/dist
    routes:
      - type: rewrite
        source: /api/*
        # O destino deve ser a URL do serviço backend, sem crases
        destination: https://django-backend-g5qa.onrender.com/api/*
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: VITE_API_BASE_URL
        # O valor deve ser a URL base do backend, sem crases
        value: https://django-backend-g5qa.onrender.com
    buildFilter:
      paths:
        - frontend/**