services:
  # --- Configuração do Backend Django ---
  - type: web
    name: django-backend-e7od
    env: python
    # Otimizações para reduzir uso de memória
    plan: starter  # Usar plano com mais memória se disponível
    buildCommand: "cd backend && ./build.sh"
    startCommand: "cd backend && gunicorn sgo_core.wsgi --workers 1 --max-requests 1000 --timeout 120"
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.5"
      - key: USE_S3
        value: "TRUE"
      - key: AWS_STORAGE_BUCKET_NAME
        value: sgo-cliente-anexos-36
      - key: AWS_S3_REGION_NAME
        value: sa-east-1
      - key: ALLOWED_HOSTS
        value: "django-backend-e7od-4cjk.onrender.com,django-backend-e7od.onrender.com"
      - key: DEBUG
        value: "False"
      - key: CORS_ALLOWED_ORIGINS
        value: "https://frontend-s7jt-4cjk.onrender.com"
      - key: CSRF_TRUSTED_ORIGINS
        value: "https://frontend-s7jt-4cjk.onrender.com"
      - key: DJANGO_SUPERUSER_USERNAME
        value: admin
      - key: DJANGO_SUPERUSER_EMAIL
        value: idng3@hotmail.com
      - key: DATABASE_URL
        fromDatabase:
          name: meu-banco-sgo
          property: connectionString
      - key: SECRET_KEY
        sync: false
      - key: DJANGO_SUPERUSER_PASSWORD
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false

  # --- Configuração do Frontend React ---
  - type: web
    name: frontend-s7jt
    env: node
    rootDir: frontend
    buildCommand: "npm install && npm run build"
    startCommand: "npx serve -s dist"
    envVars:
      - key: VITE_API_URL
        value: "https://django-backend-e7od-4cjk.onrender.com"

# --- Configuração do Banco de Dados PostgreSQL ---
databases:
  - name: meu-banco-sgo
    plan: free
    databaseName: sgo_db
    user: sgo_user